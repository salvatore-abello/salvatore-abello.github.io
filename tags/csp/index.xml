<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Salvatore Abello's Blog</title><link>https://blog.babelo.xyz/</link><description>Personal blog about Cybersec &amp; other things.</description><language>en-us</language><atom:link href="https://blog.babelo.xyz/tags/csp/" rel="self" type="application/rss+xml"/><item><title>CSS Exfiltration under default-src 'self'</title><link>https://blog.babelo.xyz/posts/css-exfiltration-under-default-src-self/</link><guid>https://blog.babelo.xyz/posts/css-exfiltration-under-default-src-self/</guid><pubDate>Thu, 27 Feb 2025 16:14:14 CET</pubDate><description>&lt;![CDATA[CSS Injections have always fascinated me. A few months ago, I asked myself: &ldquo;is it possible to do CSS Exfiltration if default-src &lsquo;self&rsquo; is specified in the CSP?&rdquo;
Well, if you&rsquo;re reading this you already know the answer is yes. Also, I wrote a challenge about this for TRX CTF 2025: Keeper . This post will serve both as a writeup for the challenge and as an explanation of this new &ldquo;technique&rdquo;.]]></description></item><item><title>fire-leak - ASIS CTF Finals 2024</title><link>https://blog.babelo.xyz/posts/fire-leak/</link><guid>https://blog.babelo.xyz/posts/fire-leak/</guid><pubDate>Wed, 01 Jan 2025 12:00:37 CET</pubDate><description>&lt;![CDATA[This year, I played in the ASIS CTF Finals with @TheRomanXpl0it, and we secured 7th place at the end of the CTF. I decided to write this up because I&rsquo;ve never seen a similar challenge before. @simonedimaria and I worked on this challenge and solved it after about 8 hours.
Overview As the name suggests, this is an XS-Leak challenge. We&rsquo;re given the source code and there are three endpoints.]]></description></item></channel></rss>